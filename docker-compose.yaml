name: nivalta

volumes:
 authdb_vol:
 uploadsdb_vol:
 ocrdb_vol:
 pages_vol:
 vectordb_vol:
 uploads_vol:

networks:
 auth-network:
   driver: bridge
 uploads-network:
   driver: bridge
 ocr-network:
   driver: bridge
 vector-network:
   driver: bridge
 nivalta-network:
   driver: bridge

services:
  authentication-api:
    container_name: cauthentication
    build:
      context: ./python/authentication
    depends_on:
      local-auth-db:
        condition: service_healthy
    networks:
      - auth-network
      - nivalta-network
    ports:
      - "5000:5000"
    volumes:
      - ./python/authentication:/usr/src/authentication
    restart: always

  ocr-api:
    container_name: cocr
    build:
      context: ./python/ocr
    depends_on:
      local-ocr-db:
        condition: service_healthy
    networks:
      - ocr-network
      - nivalta-network
    ports:
      - "5002:5002"
    volumes:
      - ./python/ocr:/usr/src/ocr-service
      - pages_vol:/usr/src/ocr-service/pages
    restart: always

  uploads-api:
    container_name: cuploads
    build:
      context: ./python/uploads
    depends_on:
      local-uploads-db:
        condition: service_healthy
    networks:
      - uploads-network
      - nivalta-network
    ports:
      - "5001:5001"
    volumes:
      - ./python/uploads:/usr/src/uploads
      - uploads_vol:/usr/src/uploads/uploads
    restart: always

  react-ui:
    container_name: creact
    build:
      context: ./react
    networks:
      - nivalta-network
    ports:
      - "8080:8080"
    environment:
      - HOST=0.0.0.0
      - PORT=8080
      - PROD=false
    restart: always

  nginx-proxy:
    container_name: cnginx
    build:
      context: ./nginx
    networks:
      - nivalta-network
    ports:
      - "80:80"
    environment:
      - AUTHENTICATION_SERVICE_HOST=authentication-api
      - OCR_SERVICE_HOST=ocr-api
      - UPLOADS_HOST=uploads-api
      - REACT_SERVICE_HOST=react-ui
    restart: always
    depends_on:
      - authentication-api
      - ocr-api
      - uploads-api
      - react-ui

  local-auth-db:
    container_name: clocal-auth-dbase
    image: mysql:8
    ports:
      - "32000:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root_auth_pass
      MYSQL_DATABASE: auth
      MYSQL_USER: local_auth_user
      MYSQL_PASSWORD: local_auth_pass
    networks:
      - auth-network
    volumes:
      - authdb_vol:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5

  local-ocr-db:
    container_name: clocal-ocr-dbase
    image: postgres:15
    ports:
      - "32002:5432"
    environment:
      POSTGRES_DB: ocr_db
      POSTGRES_USER: local_ocr_user
      POSTGRES_PASSWORD: local_ocr_pass
    networks:
      - ocr-network
    volumes:
      - ocrdb_vol:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  local-uploads-db:
    container_name: clocal-uploads-dbase
    image: mysql:8
    ports:
      - "32001:3306" 
    environment:
      MYSQL_ROOT_PASSWORD: root_uploads_pass
      MYSQL_DATABASE: uploads_db
      MYSQL_USER: local_uploads_user
      MYSQL_PASSWORD: local_uploads_pass
    networks:
      - uploads-network
    volumes:
      - uploadsdb_vol:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5