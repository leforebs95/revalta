AWSTemplateFormatVersion: '2010-09-09'
Description: Nivalta Stack - Main Infrastructure Template
Parameters:
  Environment:
    Type: String
    AllowedValues:
    - prod
    - preprod
    Description: Deployment environment
  ServiceDomainName:
    Type: String
    Description: Base domain name for the application
    Default: nivalta.local
  HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
    Description: Route53 hosted zone ID for domain configuration
  SubDomainPrefix:
    Type: String
    AllowedValues:
    - ''
    - preprod
    Description: Subdomain prefix for environment
Resources:
  NivaltaLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      LogGroupName:
        Fn::Sub: /ecs/${Environment}-nivalta
      RetentionInDays: 30
      Tags:
      - Key: Environment
        Value:
          Ref: Environment
  AppStateTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName:
        Fn::Sub: ${Environment}-app-state
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: item_type
        AttributeType: S
      - AttributeName: item_id
        AttributeType: S
      KeySchema:
      - AttributeName: item_type
        KeyType: HASH
      - AttributeName: item_id
        KeyType: RANGE
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      Tags:
      - Key: Environment
        Value:
          Ref: Environment
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: ecs-tasks.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
      - PolicyName: SecretsAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - secretsmanager:GetSecretValue
            Resource:
              Fn::Sub: arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${Environment}/nivalta/*
      - PolicyName: DynamoDBAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:DeleteItem
            Resource:
              Fn::GetAtt:
              - AppStateTable
              - Arn
  VPCStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      TemplateURL: https://s3.us-west-2.amazonaws.com/nivalta-cloudformation-preprod/4433264d7844672f67d321202d027592.template
      Parameters:
        Environment:
          Ref: Environment
  SecurityGroupsStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      TemplateURL: https://s3.us-west-2.amazonaws.com/nivalta-cloudformation-preprod/eceb7ed4e2c0758aac3b3ed071f02408.template
      Parameters:
        Environment:
          Ref: Environment
        VpcId:
          Fn::GetAtt:
          - VPCStack
          - Outputs.VpcId
  ServiceDiscoveryStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      TemplateURL: https://s3.us-west-2.amazonaws.com/nivalta-cloudformation-preprod/469a17c60121a6d17a8d6f3cb076f0ae.template
      Parameters:
        Environment:
          Ref: Environment
        VpcId:
          Fn::GetAtt:
          - VPCStack
          - Outputs.VpcId
        ServiceDiscoveryDomain:
          Ref: ServiceDomainName
        DnsRecordTTL: 10
        HealthCheckThreshold: 1
  RDBStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      TemplateURL: https://s3.us-west-2.amazonaws.com/nivalta-cloudformation-preprod/8781f4a0b46a2cdcf253abe5e518d47a.template
      Parameters:
        Environment:
          Ref: Environment
        DBSecurityGroupId:
          Fn::GetAtt:
          - SecurityGroupsStack
          - Outputs.DBSecurityGroupId
        DBSubnetGroup:
          Fn::GetAtt:
          - VPCStack
          - Outputs.DBSubnetGroup
        DBName:
          Fn::Sub: ${Environment}Nivalta
        DBUsername:
          Fn::Sub: nivalta_${Environment}_user
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName:
        Fn::Sub: ${Environment}-nivalta-cluster
      ServiceConnectDefaults:
        Namespace:
          Fn::GetAtt:
          - ServiceDiscoveryStack
          - Outputs.NamespaceName
      CapacityProviders:
      - FARGATE
      - FARGATE_SPOT
      DefaultCapacityProviderStrategy:
      - CapacityProvider: FARGATE
        Weight: 1
      ClusterSettings:
      - Name: containerInsights
        Value: enabled
      Configuration:
        ExecuteCommandConfiguration:
          Logging: OVERRIDE
          LogConfiguration:
            CloudWatchEncryptionEnabled: true
            CloudWatchLogGroupName:
              Fn::Sub: /ecs/${Environment}-nivalta/execute-command
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${Environment}-nivalta-cluster
      - Key: Environment
        Value:
          Ref: Environment
  LoadBalancerStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      TemplateURL: https://s3.us-west-2.amazonaws.com/nivalta-cloudformation-preprod/7b0e4c9c89de46b01df1c647d4a138f0.template
      Parameters:
        Environment:
          Ref: Environment
        VpcId:
          Fn::GetAtt:
          - VPCStack
          - Outputs.VpcId
        PublicSubnetOne:
          Fn::GetAtt:
          - VPCStack
          - Outputs.PublicSubnet1
        PublicSubnetTwo:
          Fn::GetAtt:
          - VPCStack
          - Outputs.PublicSubnet2
        SecurityGroupId:
          Fn::GetAtt:
          - SecurityGroupsStack
          - Outputs.NivaltaLBSecurityGroupId
        DomainName: nivalta.com
        SubDomainPrefix:
          Ref: SubDomainPrefix
        HostedZoneId:
          Ref: HostedZoneId
        HealthCheckPath: /api/version
        HealthCheckInterval: 30
  TasksStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    DependsOn: SecurityGroupsStack
    Properties:
      TemplateURL: https://s3.us-west-2.amazonaws.com/nivalta-cloudformation-preprod/4d89b291b4ca4ef60bed4b9ecb63da53.template
      Parameters:
        ExecutionRoleArn:
          Fn::GetAtt:
          - ECSTaskExecutionRole
          - Arn
        Environment:
          Ref: Environment
        ServiceDiscoveryNamespace:
          Fn::GetAtt:
          - ServiceDiscoveryStack
          - Outputs.NamespaceName
        DBSecretArn:
          Fn::GetAtt:
          - RDBStack
          - Outputs.DBSecretArn
        DBConnectionSecretArn:
          Fn::GetAtt:
          - RDBStack
          - Outputs.DBConnectionSecretArn
  ServicesStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      TemplateURL: https://s3.us-west-2.amazonaws.com/nivalta-cloudformation-preprod/b232a924558e8ae157143562474028ff.template
      Parameters:
        Environment:
          Ref: Environment
        ECSCluster:
          Ref: ECSCluster
        PublicSubnetOne:
          Fn::GetAtt:
          - VPCStack
          - Outputs.PublicSubnet1
        PublicSubnetTwo:
          Fn::GetAtt:
          - VPCStack
          - Outputs.PublicSubnet2
        TaskDefinitionsStackName:
          Fn::GetAtt:
          - TasksStack
          - Outputs.StackName
        FlaskTaskDefinitionARN:
          Fn::GetAtt:
          - TasksStack
          - Outputs.FlaskTaskDefinitionArn
        FlaskSecurityGroupId:
          Fn::GetAtt:
          - SecurityGroupsStack
          - Outputs.FlaskApiServerSecurityGroupId
        FlaskServiceDiscoveryARN:
          Fn::GetAtt:
          - ServiceDiscoveryStack
          - Outputs.FlaskServiceDiscoveryArn
        SveltekitTakDefinitionARN:
          Fn::GetAtt:
          - TasksStack
          - Outputs.SvelteTaskDefinitionArn
        SveltekitSecurityGroupId:
          Fn::GetAtt:
          - SecurityGroupsStack
          - Outputs.SveltekitUISecurityGroupId
        SveltekitServiceDiscoveryARN:
          Fn::GetAtt:
          - ServiceDiscoveryStack
          - Outputs.SvelteServiceDiscoveryArn
  NginxServiceStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    DependsOn: ServicesStack
    Properties:
      TemplateURL: https://s3.us-west-2.amazonaws.com/nivalta-cloudformation-preprod/f8a63f304d86b08e942b9f9c1b05b3ea.template
      Parameters:
        Environment:
          Ref: Environment
        ECSCluster:
          Ref: ECSCluster
        PublicSubnetOne:
          Fn::GetAtt:
          - VPCStack
          - Outputs.PublicSubnet1
        PublicSubnetTwo:
          Fn::GetAtt:
          - VPCStack
          - Outputs.PublicSubnet2
        TaskDefinitionARN:
          Fn::GetAtt:
          - TasksStack
          - Outputs.NginxTaskDefinitionArn
        ServiceDiscoveryARN:
          Fn::GetAtt:
          - ServiceDiscoveryStack
          - Outputs.NginxServiceDiscoveryArn
        SecurityGroupId:
          Fn::GetAtt:
          - SecurityGroupsStack
          - Outputs.NginxProxySecurityGroupId
        TargetGroupArn:
          Fn::GetAtt:
          - LoadBalancerStack
          - Outputs.TargetGroupArn
Outputs:
  LogGroupName:
    Value:
      Ref: NivaltaLogGroup
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-LogGroupName
  TaskExecutionRoleArn:
    Value:
      Fn::GetAtt:
      - ECSTaskExecutionRole
      - Arn
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-TaskExecutionRoleArn
  VPCId:
    Description: VPC ID
    Value:
      Fn::GetAtt:
      - VPCStack
      - Outputs.VpcId
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-VPCId
  LoadBalancerDNS:
    Description: Application Load Balancer DNS
    Value:
      Fn::GetAtt:
      - LoadBalancerStack
      - Outputs.LoadBalancerDNS
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-LoadBalancerDNS
  ServiceEndpoint:
    Description: Service Endpoint URL
    Value:
      Fn::GetAtt:
      - LoadBalancerStack
      - Outputs.DomainEndpoint
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-ServiceEndpoint
