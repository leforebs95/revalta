AWSTemplateFormatVersion: '2010-09-09'
Description: "Nivalta Stack - Main Infrastructure Template"

Parameters:
  Environment:
    Type: String
    AllowedValues: [prod, preprod]
    Description: Deployment environment
  
  ServiceDomainName:
    Type: String
    Description: Base domain name for the application
    Default: nivalta.local
  
  HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
    Description: Route53 hosted zone ID for domain configuration
  
  SubDomainPrefix:
    Type: String
    AllowedValues: ['', preprod]
    Description: Subdomain prefix for environment

Resources:

  # CloudWatch Log Group
  NivaltaLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      LogGroupName: !Sub /ecs/${Environment}-nivalta
      RetentionInDays: 30
      Tags:
        - Key: Environment
          Value: !Ref Environment

  # ECS Task Execution Role
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: SecretsAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: !Sub arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${Environment}/nivalta/*

  VPCStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      TemplateURL: vpc.yaml
      Parameters:
        Environment: !Ref Environment

  SecurityGroupsStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      TemplateURL: security-groups.yaml
      Parameters:
        Environment: !Ref Environment
        VpcId: !GetAtt VPCStack.Outputs.VpcId

  ServiceDiscoveryStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      TemplateURL: service-discovery.yaml
      Parameters:
        Environment: !Ref Environment
        VpcId: !GetAtt VPCStack.Outputs.VpcId
        ServiceDiscoveryDomain: !Ref ServiceDomainName
        DnsRecordTTL: 10
        HealthCheckThreshold: 1

  ECSCluster:
   Type: AWS::ECS::Cluster
   Properties:
     ClusterName: !Sub ${Environment}-nivalta-cluster
     ServiceConnectDefaults:
      Namespace: !GetAtt ServiceDiscoveryStack.Outputs.NamespaceName
     CapacityProviders:
       - FARGATE
       - FARGATE_SPOT
     DefaultCapacityProviderStrategy:
       - CapacityProvider: FARGATE
         Weight: 1
     ClusterSettings:
       - Name: containerInsights
         Value: enabled
     Configuration:
       ExecuteCommandConfiguration:
         Logging: OVERRIDE
         LogConfiguration:
           CloudWatchEncryptionEnabled: true
           CloudWatchLogGroupName: !Sub /ecs/${Environment}-nivalta/execute-command
     Tags:
       - Key: Name
         Value: !Sub ${Environment}-nivalta-cluster
       - Key: Environment
         Value: !Ref Environment
  
  LoadBalancerStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      TemplateURL: alb.yaml
      Parameters:
        Environment: !Ref Environment
        VpcId: !GetAtt VPCStack.Outputs.VpcId
        PublicSubnetOne: !GetAtt VPCStack.Outputs.PublicSubnet1
        PublicSubnetTwo: !GetAtt VPCStack.Outputs.PublicSubnet2
        SecurityGroupId: !GetAtt SecurityGroupsStack.Outputs.NivaltaLBSecurityGroupId
        DomainName: nivalta.com
        SubDomainPrefix: !Ref SubDomainPrefix
        HostedZoneId: !Ref HostedZoneId
        HealthCheckPath: /api/version
        HealthCheckInterval: 30

  TasksStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    DependsOn: SecurityGroupsStack
    Properties:
      TemplateURL: tasks/main.yaml
      Parameters:
        ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
        Environment: !Ref Environment
        ServiceDiscoveryNamespace: !GetAtt ServiceDiscoveryStack.Outputs.NamespaceName

  ServicesStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      TemplateURL: services/main.yaml
      Parameters:
        Environment: !Ref Environment
        ECSCluster: !Ref ECSCluster
        PublicSubnetOne: !GetAtt VPCStack.Outputs.PublicSubnet1
        PublicSubnetTwo: !GetAtt VPCStack.Outputs.PublicSubnet2
        TaskDefinitionsStackName: !GetAtt TasksStack.Outputs.StackName
        FlaskTaskDefinitionARN: !GetAtt TasksStack.Outputs.FlaskTaskDefinitionArn
        FlaskSecurityGroupId: !GetAtt SecurityGroupsStack.Outputs.FlaskApiServerSecurityGroupId
        FlaskServiceDiscoveryARN: !GetAtt ServiceDiscoveryStack.Outputs.FlaskServiceDiscoveryArn
        SveltekitTakDefinitionARN: !GetAtt TasksStack.Outputs.SvelteTaskDefinitionArn
        SveltekitSecurityGroupId: !GetAtt SecurityGroupsStack.Outputs.SveltekitUISecurityGroupId
        SveltekitServiceDiscoveryARN: !GetAtt ServiceDiscoveryStack.Outputs.SvelteServiceDiscoveryArn

  NginxServiceStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    DependsOn: ServicesStack
    Properties:
      TemplateURL: services/nginx.yaml
      Parameters:
        Environment: !Ref Environment
        ECSCluster: !Ref ECSCluster
        PublicSubnetOne: !GetAtt VPCStack.Outputs.PublicSubnet1
        PublicSubnetTwo: !GetAtt VPCStack.Outputs.PublicSubnet2
        TaskDefinitionARN: !GetAtt TasksStack.Outputs.NginxTaskDefinitionArn
        ServiceDiscoveryARN: !GetAtt ServiceDiscoveryStack.Outputs.NginxServiceDiscoveryArn
        SecurityGroupId: !GetAtt SecurityGroupsStack.Outputs.NginxProxySecurityGroupId
        TargetGroupArn: !GetAtt LoadBalancerStack.Outputs.TargetGroupArn

Outputs:

  LogGroupName:
    Value: !Ref NivaltaLogGroup
    Export:
      Name: !Sub ${AWS::StackName}-LogGroupName

  TaskExecutionRoleArn:
    Value: !GetAtt ECSTaskExecutionRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-TaskExecutionRoleArn

  VPCId:
    Description: VPC ID
    Value: !GetAtt VPCStack.Outputs.VpcId
    Export:
      Name: !Sub ${AWS::StackName}-VPCId

  LoadBalancerDNS:
    Description: Application Load Balancer DNS
    Value: !GetAtt LoadBalancerStack.Outputs.LoadBalancerDNS
    Export:
      Name: !Sub ${AWS::StackName}-LoadBalancerDNS

  ServiceEndpoint:
    Description: Service Endpoint URL
    Value: !GetAtt LoadBalancerStack.Outputs.DomainEndpoint
    Export:
      Name: !Sub ${AWS::StackName}-ServiceEndpoint