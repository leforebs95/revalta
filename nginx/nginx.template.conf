user nginx;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 1024;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##
	sendfile on;
    tcp_nopush on;
    types_hash_max_size 2048;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

	# Dual environment resolver configuration
    # 127.0.0.11 - Docker's internal DNS
    # 169.254.169.253 - AWS VPC DNS resolvery
    resolver 127.0.0.11 169.254.169.253 valid=10s;
    resolver_timeout 5s;

	##
    # SSL Settings
    ##
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;

	##
	# Gzip Settings
	##

	gzip on;
  	gzip_proxied any;
  	gzip_types text/plain application/json;
  	gzip_min_length 1000;

	##
	# Virtual Host Configs
	##
	server {
        listen 80;
		server_name localhost 127.0.0.1;

		# Health check endpoint for AWS
        location /health {
            access_log off;
			add_header Content-Type text/plain;
            return 200 'healthy\n';
        }

        location / {
			set $upstream_svelte "${SVELTE_SERVICE_HOST}:8080";
            proxy_pass http://$upstream_svelte;
			proxy_http_version  1.1;
			proxy_set_header    Upgrade $http_upgrade;
			proxy_set_header    Connection "upgrade";
			proxy_set_header    Host $host;
			proxy_set_header    X-Real-IP $remote_addr;
			proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header    X-Forwarded-Host $server_name;

			# Environment-specific timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Error handling for DNS resolution
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
        }

        location /api {
			
			# Reject requests with unsupported HTTP method
			if ($request_method !~ ^(GET|POST|HEAD|OPTIONS|PUT|DELETE)$) {
				return 405;
			}

			# Handle Requests to the API
			set $upstream_flask "${FLASK_SERVICE_HOST}:5000";
            proxy_pass http://$upstream_flask;
			proxy_http_version  1.1;
			proxy_set_header    Upgrade $http_upgrade;
			proxy_set_header    Connection "upgrade";
			proxy_set_header    Host $host;
			proxy_set_header    X-Real-IP $remote_addr;
			proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header    X-Forwarded-Host $server_name;

			# Environment-specific timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Error handling for DNS resolution
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
        }
	}
}